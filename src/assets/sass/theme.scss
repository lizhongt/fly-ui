$themes: (
  default: (
    // 基础颜色
      MAIN: #111f2c,
    SUBMARY: #f2f4f5,
    THIRDMARY: #191f25,
    PRIMARY: #0089ff,
    DEFAULT: #ffffff,
    WARNNING: #fb602d,
    // 背景颜色
      DEFAULT-TAP: rgba(226, 228, 229, 1),
    DEFAULT-DISABLED: rgba(242, 244, 245, 1),
    PRIMARY-TAP: rgba(2, 124, 229, 1),
    PRIMARY-DISABLED: rgba(0, 137, 255, 0.4),
    SUBMARY-TAP: rgba(214, 218, 220, 1),
    SUBMARY-DISABLED: rgba(242, 244, 245, 1),
    WARNNING-TAP: rgba(222, 88, 44, 1),
    WARNNING-DISABLED: rgba(251, 96, 45, 0.4)
  )
);

@mixin colory {
  @each $theme-name, $theme-map in $themes {
    //!global 把局部变量强升为全局变量
    $theme-map: $theme-map !global;
    //判断html的data-theme的属性值  #{}是sass的插值表达式
    //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
    [data-theme='#{$theme-name}'] & {
      @content;
    }
  }
}
//声明一个根据Key获取颜色的function
@function themed($key) {
  @return map-get($theme-map, $key);
}

// 颜色转换
@mixin color($color: PRIMARY, $opacity: none) {
  @include colory {
    @if $opacity == none {
      color: themed($color);
    } @else {
      color: rgba(themed($color), $opacity);
    }
  }
}

// 背景颜色转换
@mixin background($color: PRIMARY, $opacity: none) {
  @include colory {
    @if $opacity == none {
      background-color: themed($color);
    } @else {
      background-color: rgba(themed($color), $opacity);
    }
  }
}

// 边框颜色转换
@mixin border($opacity: 0.08, $border: THIRDMARY) {
  @include colory {
    border-color: rgba(themed($border), $opacity);
  }
}
